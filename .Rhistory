correlation_mean_Wheelbase_cm # correlação um pouco acima de 1
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Wheelbase_cm)
summary(regression)
?lm
?plot
z = plot(
x=df_cars$Wheelbase_cm,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Wheelbase_cm x Média Consumo",
xlab="Wheelbase_cm", ylab="Média de consumo", pch=1,
) # nao parece ter uma grande correlação, remover
grid(z) #aplicando grid ao gráfico
abline(regression)
correlation_mean_Wheelbase_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Wheelbase_cm)
correlation_mean_Wheelbase_cm # correlação um pouco acima de 1
str(df_cars)
correlation_mean_Length_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Length_cm)
correlation_mean_Length_cm # correlação um pouco perto de 0,7 : 0,674
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Length_cm)
summary(regression)
z = plot(
x=df_cars$Length_cm,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Length_cm x Média Consumo",
xlab="Length_cm", ylab="Média de consumo", pch=1,
) # nao parece ter uma grande correlação, remover
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Length_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Width_cm)
correlation_mean_Length_cm # correlação um pouco perto de 0,65 : 0,66623
summary(regression)
str(df_cars)
correlation_mean_Length_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Width_cm)
correlation_mean_Length_cm # correlação um pouco perto de ZERO : 0,371
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Width_cm)
summary(regression) # p-valor: 5.18e-08 ***
z = plot(
x=df_cars$Width_cm,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Width_cm x Média Consumo",
xlab="Width_cm", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
correlation_mean_Length_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Width_cm)
correlation_mean_Length_cm # correlação um pouco perto de ZERO : 0,371
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Width_cm)
summary(regression) # p-valor: 5.18e-08 ***
str(df_cars)
correlation_mean_Height_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Height_cm)
correlation_mean_Height_cm # correlação um pouco perto de ZERO : 0,371
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Height_cm)
summary(regression) # p-valor: 0.0062 **
z = plot(
x=df_cars$Height_cm,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Height_cm x Média Consumo",
xlab="Height_cm", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Length_cm)
summary(regression)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Wheelbase_cm)
summary(regression)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Range__WLTP__km)
summary(regression)
correlation_mean_Range__WLTP__km <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Range__WLTP__km)
correlation_mean_Range__WLTP__km # correlação um pouco acima de 1
correlation_mean_Battery_capacity_kWh <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Battery_capacity_kWh)
correlation_mean_Battery_capacity_kWh # correlação um pouco acima de 0,6
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Battery_capacity_kWh)
summary(regression)
correlation_mean_Drive_type <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Drive_type)
str(df_cars)
str(df_cars)
unique(df_cars$Drive_type)
df_cars$Drive_type[which(df_cars$Drive_type == "4WD")] <- 1
df_cars$Drive_type[which(df_cars$Drive_type == "2WD (rear)")] <- 2
df_cars$Drive_type[which(df_cars$Drive_type == "2WD (front)")] <- 3
df_cars_with_no_NA$Drive_type[which(df_cars_with_no_NA$Drive_type == "4WD")] <- 1
df_cars_with_no_NA$Drive_type[which(df_cars_with_no_NA$Drive_type == "2WD (rear)")] <- 2
df_cars_with_no_NA$Drive_type[which(df_cars_with_no_NA$Drive_type == "2WD (front)")] <- 3
unique(df_cars)
View(df_cars)
View(df_cars_with_no_NA)
str(df_cars_with_no_NA)
drive_types_numeric <- as.numeric(df_cars_with_no_NA$Drive_type)
drive_types_numeric2 <- as.numeric(df_cars$Drive_type)
df_cars_with_no_NA$Drive_type <- drive_types_numeric
df_cars$Drive_type <- drive_types_numeric2
str(df_cars_with_no_NA)
View(df_cars_with_no_NA)
str(df_cars)
View(df_cars)
correlation_mean_Drive_type <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Drive_type)
correlation_mean_Drive_type # CORRELAÇÃO NEGATIVA
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Drive_type)
summary(regression)
correlation_mean_Minimal_empty_weight_kg <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Minimal_empty_weight_kg)
correlation_mean_Minimal_empty_weight_kg # correlação um pouco perto de ZERO : 0,3289925
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Minimal_empty_weight_kg)
summary(regression) # p-valor: 0.0162 *
correlation_mean_Width_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Width_cm)
correlation_mean_Width_cm # correlação um pouco perto de ZERO : 0,371
str(df_cars)
correlation_mean_Permissable_gross_weight_kg <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Permissable_gross_weight_kg)
correlation_mean_Permissable_gross_weight_kg # correlação acima de 0,7 : 0,75778
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Permissable_gross_weight_kg)
summary(regression) # p-valor: 5.06e-11 ***
z = plot(
x=df_cars$Permissable_gross_weight_kg,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Permissable_gross_weight_kg x Média Consumo",
xlab="Permissable_gross_weight_kg", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
str(df_cars)
correlation_mean_Maximum_load_capacity_kg <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_load_capacity_kg)
correlation_mean_Maximum_load_capacity_kg # correlação acima de 0,8 : 0,85759
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_load_capacity_kg)
summary(regression) # p-valor: 2.42e-16 ***
z = plot(
x=df_cars$Maximum_load_capacity_kg,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_load_capacity_kg x Média Consumo",
xlab="Maximum_load_capacity_kg", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression
str(df_cars)
str(df_cars)
correlation_mean_Maximum_load_capacity_kg <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_load_capacity_kg)
correlation_mean_Maximum_load_capacity_kg # correlação próxima de 0,7 : 0,7014771
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_load_capacity_kg)
summary(regression) # p-valor: 4.90e-09 ***
z = plot(
x=df_cars$Maximum_load_capacity_kg,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_load_capacity_kg x Média Consumo",
xlab="Maximum_load_capacity_kg", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
regression <- lm(df_cars$Maximum_load_capacity_kg ~ df_cars$mean__Energy_consumption_kWh_100_km)
summary(regression) # p-valor: 4.90e-09 ***
z = plot(
x=df_cars$Maximum_load_capacity_kg,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_load_capacity_kg x Média Consumo",
xlab="Maximum_load_capacity_kg", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Maximum_load_capacity_kg <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_load_capacity_kg)
correlation_mean_Maximum_load_capacity_kg # correlação próxima de 0,7 : 0,7014771
regression <- lm(df_cars$Maximum_load_capacity_kg ~ df_cars$mean__Energy_consumption_kWh_100_km)
summary(regression) # p-valor: 4.90e-09 ***
z = plot(
x=df_cars$Maximum_load_capacity_kg,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_load_capacity_kg x Média Consumo",
xlab="Maximum_load_capacity_kg", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Maximum_load_capacity_kg <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_load_capacity_kg)
correlation_mean_Maximum_load_capacity_kg # correlação próxima de 0,7 : 0,7014771
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_load_capacity_kg)
summary(regression) # p-valor: 2.42e-16 ***
z = plot(
x=df_cars$Maximum_load_capacity_kg,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_load_capacity_kg x Média Consumo",
xlab="Maximum_load_capacity_kg", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
str(df_cars)
correlation_mean_Number_of_seats <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Number_of_seats)
correlation_mean_Number_of_seats # correlação próxima de 0,7 : 0,7014771
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Number_of_seats)
summary(regression) # p-valor: 2.42e-16 ***
z = plot(
x=df_cars$Number_of_seats,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Number_of_seats x Média Consumo",
xlab="Number_of_seats", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
correlation_mean_Number_of_seats <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Number_of_seats)
correlation_mean_Number_of_seats # correlação próxima de 0,7 : 0,7014771
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Number_of_seats)
summary(regression) # p-valor: 2.42e-16 ***
z = plot(
x=df_cars$Number_of_seats,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Number_of_seats x Média Consumo",
xlab="Number_of_seats", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Number_of_doors <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Number_of_doors)
correlation_mean_Number_of_doors # correlação próxima de 0 : 0,2042503
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Number_of_doors)
summary(regression) # p-valor: 0.142
str(df_cars)
correlation_mean_Tire_size_in <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Tire_size_in)
correlation_mean_Tire_size_in # correlação próxima de 0 : 0,2042503
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Tire_size_in)
summary(regression) # p-valor: 0.142
z = plot(
x=df_cars$Tire_size_in,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Tire_size_in x Média Consumo",
xlab="Tire_size_in", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Maximum_speed_kph <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_speed_kph)
correlation_mean_Maximum_speed_kph # correlação próxima de 0,4 : 0,394135
summary(regression) # p-valor: 0.0035 **
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_speed_kph)
summary(regression) # p-valor: 0.0035 **
z = plot(
x=df_cars$Maximum_speed_kph,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_speed_kph x Média Consumo",
xlab="Maximum_speed_kph", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Maximum_speed_kph <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_speed_kph)
correlation_mean_Maximum_speed_kph # correlação próxima de 0,4 : 0,4266974
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_speed_kph)
summary(regression) # p-valor: 0.0035 **
z = plot(
x=df_cars$Maximum_speed_kph,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_speed_kph x Média Consumo",
xlab="Maximum_speed_kph", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_speed_kph)
summary(regression) # p-valor: 0.0035 **
str(df_cars)
correlation_mean_Boot_capacity__VDA__l <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Boot_capacity__VDA__l)
correlation_mean_Boot_capacity__VDA__l # correlação próxima de 0,4 : 0,4266974
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Boot_capacity__VDA__l)
summary(regression) # p-valor: 0.00144 **
z = plot(
x=df_cars$Boot_capacity__VDA__l,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Boot_capacity__VDA__l x Média Consumo",
xlab="Boot_capacity__VDA__l", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Acceleration_0100_kph_s <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Acceleration_0100_kph_s)
correlation_mean_Acceleration_0100_kph_s # correlação próxima de 0,6 : 0,586767
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Acceleration_0100_kph_s)
summary(regression) # p-valor: 3.88e-06 ***
z = plot(
x=df_cars$Acceleration_0100_kph_s,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Acceleration_0100_kph_s x Média Consumo",
xlab="Acceleration_0100_kph_s", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
str(df_cars)
correlation_mean_Maximum_DC_charging_power_kW <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_DC_charging_power_kW)
correlation_mean_Maximum_DC_charging_power_kW # CORRLAÇÃO NEGATIVA próxima de -0,5 : -0.4642759
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_DC_charging_power_kW)
summary(regression) # p-valor: 0.000462 ***
z = plot(
x=df_cars$Maximum_DC_charging_power_kW,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_DC_charging_power_kW x Média Consumo",
xlab="Maximum_DC_charging_power_kW", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_mean__Energy_consumption_kWh_100_km <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$mean__Energy_consumption_kWh_100_km)
correlation_mean_mean__Energy_consumption_kWh_100_km # correlaçãoA próxima de 0,6 : 0.5781921
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$mean__Energy_consumption_kWh_100_km)
summary(regression) # p-valor: 5.79e-06 ***
z = plot(
x=df_cars$mean__Energy_consumption_kWh_100_km,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="mean__Energy_consumption_kWh_100_km x Média Consumo",
xlab="mean__Energy_consumption_kWh_100_km", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
correlation_mean_mean__Energy_consumption_kWh_100_km <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$mean__Energy_consumption_kWh_100_km)
correlation_mean_mean__Energy_consumption_kWh_100_km # correlaçãoA próxima de 0,6 : 0.5781921
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$mean__Energy_consumption_kWh_100_km)
summary(regression) # p-valor: 5.79e-06 ***
numeric_columns <- sapply(df_cars, is.numeric)
correlation <- cor(df[,numeric_columns])
numeric_columns <- sapply(df_cars, is.numeric)
correlation <- cor(df[,numeric_columns])
head(numeric_columns)
View(numeric_columns)
?corrplot
str(df_cars)
numeric_columns <- sapply(df_cars, is.numeric)
head(numeric_columns)
View(numeric_columns)
df[,numeric_columns]
correlation <- cor(df[,numeric_columns])
correlation <- cor(df_cars[,numeric_columns])
corrplot(correlation, method = "color")
corr_simple <- function(data=df,sig=0.5){
#convert data to numeric in order to run correlations
#convert to factor first to keep the integrity of the data - each value will become a number rather than turn into NA
df_cor <- data %>% mutate_if(is.character, as.factor)
df_cor <- df_cor %>% mutate_if(is.factor, as.numeric)
#run a correlation and drop the insignificant ones
corr <- cor(df_cor)
#prepare to drop duplicates and correlations of 1
corr[lower.tri(corr,diag=TRUE)] <- NA
#drop perfect correlations
corr[corr == 1] <- NA
#turn into a 3-column table
corr <- as.data.frame(as.table(corr))
#remove the NA values from above
corr <- na.omit(corr)
#select significant values
corr <- subset(corr, abs(Freq) > sig)
#sort by highest correlation
corr <- corr[order(-abs(corr$Freq)),]
#print table
print(corr)
#turn corr back into matrix in order to plot with corrplot
mtx_corr <- reshape2::acast(corr, Var1~Var2, value.var="Freq")
#plot correlations visually
corrplot(mtx_corr, is.corr=FALSE, tl.col="black", na.label=" ")
}
corr_simple(df_cars[,numeric_columns])
corr_simple(df_cars)
corr_simple(df_cars[,numeric_columns])
?lm
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Engine_power_KM)
summary(regression)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Minimal_price__gross__PLN)
summary(regression)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_torque_Nm)
summary(regression)
correlation_mean_Type_of_brakesr <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Type_of_brakes)
correlation_mean_Type_of_brakesr # CORRELAÇÃO NEGATIVA
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Type_of_brakes)
summary(regression
summary(regression)
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Type_of_brakes)
summary(regression)
str(df_cars)
correlation_mean_Range__WLTP__km <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Range__WLTP__km)
correlation_mean_Range__WLTP__km # correlação um pouco acima de 0 : 0,1213
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Range__WLTP__km)
summary(regression) # p-valor: 0.387
z = plot(
x=df_cars$Range__WLTP__km,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Range__WLTP__km x Média Consumo",
xlab="Range__WLTP__km", ylab="Média de consumo", pch=1,
) # nao parece ter uma correlação, remover
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Wheelbase_cm <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Wheelbase_cm)
correlation_mean_Wheelbase_cm # correlação um pouco perto de 0,7 : 0,674
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Wheelbase_cm)
summary(regression) # p-valor: 3.16e-08 ***
z = plot(
x=df_cars$Wheelbase_cm,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Wheelbase_cm x Média Consumo",
xlab="Wheelbase_cm", ylab="Média de consumo", pch=1,
) # nao parece ter uma grande correlação, remover
grid(z) #aplicando grid ao gráfico
abline(regression)
summary(regression) # p-valor: 3.16e-08 ***
str(df_cars)
correlation_mean_Tire_size_in <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Tire_size_in)
correlation_mean_Tire_size_in # correlação próxima de 0,4 : 0,394135
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Tire_size_in)
summary(regression) # p-valor: 0.0035 **
z = plot(
x=df_cars$Tire_size_in,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Tire_size_in x Média Consumo",
xlab="Tire_size_in", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
str(df_cars)
correlation_mean_Maximum_DC_charging_power_kW <- cor(df_cars$mean__Energy_consumption_kWh_100_km, df_cars$Maximum_DC_charging_power_kW)
correlation_mean_Maximum_DC_charging_power_kW # correlaçãoA próxima de 0,6 : 0.5781921
regression <- lm(df_cars$mean__Energy_consumption_kWh_100_km ~ df_cars$Maximum_DC_charging_power_kW)
summary(regression) # p-valor: 5.79e-06 ***
z = plot(
x=df_cars$Maximum_DC_charging_power_kW,
y=df_cars$mean__Energy_consumption_kWh_100_km, main="Maximum_DC_charging_power_kW x Média Consumo",
xlab="Maximum_DC_charging_power_kW", ylab="Média de consumo", pch=1,
)
grid(z) #aplicando grid ao gráfico
abline(regression)
library(dplyr)
df_cars$id <- 1:nrow(df_cars)
View(df_cars)
train_df_cars <- df_cars %>% dplyr::sample_frac(0.80)
View(train_df_cars)
test_df_cars  <- dplyr::anti_join(df, train, by = 'id')
test_df_cars  <- dplyr::anti_join(df_cars, train, by = 'id')
test_df_cars  <- dplyr::anti_join(df_cars, train_df_cars, by = 'id')
View(test_df_cars)
# make reproducible
set.seed(1)
# create ID column
df_cars$id <- 1:nrow(df_cars)
View(df_cars)
# 80% para treino:
train_df_cars <- df_cars %>% dplyr::sample_frac(0.80)
View(train_df_cars)
# 20% para teste:
test_df_cars  <- dplyr::anti_join(df_cars, train_df_cars, by = 'id')
View(test_df_cars)
str(df_cars)
model_learn_cars <- lm(mean__Energy_consumption_kWh_100_km ~ Minimal_price__gross__PLN + Engine_power_KM + Maximum_torque_Nm + Battery_capacity_kWh +
Wheelbase_cm + Length_cm + Width_cm + Minimal_empty_weight_kg + Permissable_gross_weight_kg + Maximum_load_capacity_kg +
Tire_size_in + Maximum_speed_kph + Boot_capacity__VDA__l + Maximum_DC_charging_power_kW, data = train_df_cars)
summary(model_learn_cars)
residuals <- resid(model_learn_cars)
residuals
residuals
ggplot(df_cars, aes(x = predict(model_learn_cars), y = residuals)) +
geom_point() +
geom_smooth(se = FALSE, method = 'loess') +
ggtitle("Resíduos x Valores Ajustados") +
xlab("Valores Ajustados") +
ylab("Resíduos")
install.packages("ggplot2")
library(ggplot2)
ggplot(df_cars, aes(x = predict(model_learn_cars), y = residuals)) +
geom_point() +
geom_smooth(se = FALSE, method = 'loess') +
ggtitle("Resíduos x Valores Ajustados") +
xlab("Valores Ajustados") +
ylab("Resíduos")
ggplot(df_cars, aes(x = predict(model_learn_cars), y = residuals)) +
geom_point() +
geom_smooth(se = FALSE, method = 'loess') +
ggtitle("Resíduos x Valores Ajustados") +
xlab("Valores Ajustados") +
ylab("Resíduos")
ggplot(df_cars, aes(x = predict(model_learn_cars), y = residuals)) +
geom_point() +
geom_smooth(se = FALSE, method = 'loess') +
ggtitle("Resíduos x Valores Ajustados") +
xlab("Valores Ajustados") +
ylab("Resíduos")
last_error()
rlang::last_trace()
ggplot(train_df_cars, aes(x = predict(model_learn_cars), y = residuals)) +
geom_point() +
geom_smooth(se = FALSE, method = 'loess') +
ggtitle("Resíduos x Valores Ajustados") +
xlab("Valores Ajustados") +
ylab("Resíduos")
ggplot(train_df_cars, aes(x = residuals)) +
geom_histogram(binwidth = 1, fill = 'blue', alpha = 0.7) +
ggtitle("Histograma dos Resíduos") +
xlab("Resíduos")
ggplot(train_df_cars, aes(sample = residuals)) +
geom_qq() +
geom_qq_line() +
ggtitle("QQ-Plot dos Resíduos") +
xlab("Quantis Teóricos") +
ylab("Quantis Amostrais")
save(model_learn_cars, file = "model_mean_consume_eletric_cars.RDATA")
model_loaded = load("model_mean_consume_eletric_cars.RDATA")
summary(model_loaded)
View(test_df_cars)
predictions = predict(model_loaded, newdata = test_df_cars)
predictions = predict(model_learn_cars, newdata = test_df_cars)
cat("Esperamos:", as.integer(predictions))
cat("Esperamos que os carros, nessa ordem, consuma em média:", as.integer(predictions))
View(test_df_cars)
setwd("D:/Projetos/BigDataAnalyticsComReMAzureLearning/Cap21/Projeto2")
getwd()
library(readxl)
library(dplyr)
library(sqldf)
library(ggplot2)
library(corrplot)
library(corrgram)
path_file_excel = "Acoustic_Extinguisher_Fire_Dataset/Acoustic_Extinguisher_Fire_Dataset.xlsx"
worksheets = excel_sheets(path_file_excel)
worksheets
df_extinguisher = read_excel(path_file_excel)
View(df_extinguisher)
sum(is.na(df_extinguisher))
colSums(is.na(df_extinguisher))
str(df_extinguisher)
str(df_extinguisher)
unique(df_extinguisher$FUEL)
colSums(df_extinguisher$FUEL)
unique(df_extinguisher$FUEL)
df_extinguisher$FUEL[which(df_extinguisher$FUEL == "gasoline")] <- 1
df_extinguisher$FUEL[which(df_extinguisher$FUEL == "thinner")] <- 2
df_extinguisher$FUEL[which(df_extinguisher$FUEL == "kerosene")] <- 3
df_extinguisher$FUEL[which(df_extinguisher$FUEL == "lpg")] <- 4
str(df_extinguisher)
fuel_colum_as_numeric <- as.numeric(df_extinguisher$FUEL)
df_extinguisher$FUEL <- fuel_colum_as_numeric
str(df_extinguisher)
View(df_extinguisher)
